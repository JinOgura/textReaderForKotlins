注釈内容が修正内容を反映していない。

要請内容の中で見落としているところがある。

テストしてみたら、説明とは違う動きをしている。思いつく全てのパターンをテストする。それで見逃したのは仕方ない。

関数内修正したコードの後の挙動を考えてない。成功パターンと失敗パターンの後の処理の挙動がそれで正しいか。

要求が曖昧なところがある場合、必ず確認すること。

リアルタイムでスラック確認できるようにすること。イヤホンには頼らないこと。

工数はとにかく実績値をまずその場で入れること。

先に突っ走ってる感を出さないこと(一番重要)

事前確認だけではなく、事前報告も必ずする。そして返信をもらってからもしくは15分経過してから動くこと。

指摘事項を直すときは必ずくつろいでいる状態で一人でやること。

仕様変更の修正依頼が来たら緊急を要する時じゃない場合、スラックでの報告は早くて翌朝にする。

そうしたら〜の場合どうするのかみたいな疑問が沸いた時は必ず質問すること。

棚卸しは勝手に完了にするのではなく、アプリ登録依頼する必要あり。デスクトップはまとめてやるっぽい。

コードの最後に空白行を入れること。

指摘を受けた時は、5分間頭を冷やす。

持込申請出す時にシート2も記載することを忘れないこと。

レビューの後必ずメモを見せてこれの通りに進めて問題ないですかって確認を取ること。

migrationの場合修正するたびにDataGripで必ず実行すること。

リビングを出るときは必ずmacの線をシュレッターの後ろに隠す事。

元を探って黄色いファイルに入った時、それがどのフォルダのものかを確認する習慣をつけること。

プルリク作成する時、必ず自分でチェックする。そしてその時、1行1行適当にドラッグしながらチェックする。

取り込み終わったら、みんなで次の取り込みスケジュールを確認する。

お客様にはすごい丁寧な言葉で、スラックを書くこと。